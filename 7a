#include <iostream>
#include <queue>
using namespace std;

int n, m;
int board[1000][1000];
int visit[1000][1000];
queue<pair<int,int>> q;

int dx[4] = { 0,1,0,-1 };
int dy[4] = { 1,0,-1,0 };


int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);

	int t;
	cin >> t;
	while (t--) {

		fill(&board[0][0], &board[999][1000], 0);
		fill(&visit[0][0], &visit[999][1000], 0);

		cin >> n >> m;
		char tmp;
		int a, b, c, d;
		cin >> a >> b >> c >> d;
		for (int i = m-1; i >=0; i--) {
			for (int j = 0; j < n; j++) {
				cin >> tmp;
				if (tmp == 'O') board[i][j] = 1;
				else board[i][j] = 0;
			}
		}

		visit[b][a] = 1;
		q.push({ b,a });

		int x, y;
		while (!q.empty()) {
			pair<int, int> cur = q.front(); q.pop();
			for (int i = 0; i < 4; i++) {
				x = cur.first + dx[i];
				y = cur.second + dy[i];
				if (x < 0 || x >= m || y < 0 || y >= n) continue;
				if (board[x][y] == 0 || visit[x][y]) continue;
				visit[x][y] = visit[cur.first][cur.second] + 1;
				q.push({ x,y });
			}
		}

		cout << visit[d][c] - 1 << '\n';
	}

}

//마법동굴
