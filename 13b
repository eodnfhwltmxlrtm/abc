#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int knapsack(int N, int M, vector<int>& time, vector<int>& happiness) {
    vector<int> dp(M+1, 0);
    for (int i = 0; i < N; i++) {
        for (int j = M; j >= time[i]; j--) {
            dp[j] = max(dp[j], dp[j - time[i]] + happiness[i]);
        }
    }
    return dp[M];
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int T;
    cin >> T;
    while (T--) {
        int N, M;
        cin >> N >> M;
        vector<int> time(N), happiness(N);
        for (int i = 0; i < N; i++) {
            cin >> time[i];
        }
        for (int i = 0; i < N; i++) {
            cin >> happiness[i];
        }
        cout << knapsack(N, M, time, happiness) << "\n";
    }
    return 0;
}
//knapsack
