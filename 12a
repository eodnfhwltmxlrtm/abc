#include <iostream>
#include <vector>
#include <queue>
using namespace std;

vector<int> graph[1001];
int indegree[1001];
int semesters[1001];
 
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int t;
    cin>>t;
    while(t--){
        fill(&indegree[0],&indegree[1001],0);
        fill(&semesters[0],&semesters[1001],0);

        int n,k,m;
        cin>>n>>k>>m;

        for(int i=0;i<m;i++){
            int a,b;
            cin>>a>>b;
            graph[a].push_back(b);
            indegree[b] = indegree[b] + 1;
        }

        queue<int> zero;
        for(int i=1;i<=k;i++){
            if(indegree[i]==0){
                zero.push(i);
                semesters[i] = 1;
            }
        }

        while(!zero.empty()){
            auto cur = zero.front(); zero.pop();
            for(int next : graph[cur]){
                indegree[next] = indegree[next] - 1;
                if(indegree[next]==0) zero.push(next);
                semesters[next] = semesters[cur] + 1;
            }
            graph[cur].clear();
        }

        int q;
        cin>>q;
        for(int i=0;i<q;i++){
            int number;
            cin>>number;
            if(semesters[number]<=n) cout<<"True\n";
            else cout<<"False\n";
        }
    }
}

//선수과목
