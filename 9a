#include <iostream>
#include <vector>
#include <unordered_map>
#include <set>
#include <queue>
#include <algorithm>
using namespace std;

vector<int> tree[100001];
int temp;
int a, b;
vector<int> result;
unordered_map<int, int> m;
int table[100001];

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);

	int t;
	cin >> t;
	while (t--) {
		result.clear();
		m.clear();
		fill(&table[0], &table[100001], 0);
		for (int i = 0; i < 100001; i++) {
			tree[i].clear();
		}

		int n, k;
		cin >> n >> k;

		for (int i = 1; i <= n; i++) {
			cin >> temp;
			m.insert({temp,i});
		}
		
		for (int i = 1; i <= k; i++) {
			cin >> temp;
			result.push_back(m.find(temp)->second);
		}

		for (int i = 1; i <= n; i++) {
			cin >> a >> b;
			tree[a].push_back(b);
		}

		queue<int> s;
		s.push(0);
		while (!s.empty()) {
			int cur = s.front(); s.pop();
			for (int nxt : tree[cur]) {
				table[nxt] = table[cur] + 1;
				s.push(nxt);
			}
		}

		for (int cur : result) {
			cout << table[cur] << ' ';
		}
		cout << '\n';
	}
}

//광석채굴
